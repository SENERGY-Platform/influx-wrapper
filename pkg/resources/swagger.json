{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "LastValueRequest": {
      "items": {
        "$ref": "#/definitions/LastValueRequestElement"
      },
      "type": "array"
    },
    "LastValueRequestElement": {
      "properties": {
        "measurement": {
          "description": "ID of requested measurement",
          "type": "string"
        },
        "columnName": {
          "description": "Name of the requested column",
          "type": "string"
        },
        "math": {
          "description": "Optional basic math operation like '+5'",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "measurement",
        "columnName"
      ]
    },
    "LastValueResponse": {
      "items": {
        "$ref": "#/definitions/TimeValuePair"
      },
      "type": "array"
    },
    "TimeValuePair": {
      "properties": {
        "time": {
          "description": "timestamp of reading",
          "type": "string"
        },
        "value": {
          "description": "value at this timestamp",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TagResponse": {
      "properties": {
        "tagKey": {
          "description": "tag column name and all values",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "QueriesRequestElementFilter": {
      "properties": {
        "column": {
          "description": "column name",
          "type": "string"
        },
        "math": {
          "description": "basic math operation. Format (\\+|-|\\*|/)\\d+((\\.|,)\\d+)?",
          "type": "string"
        },
        "type": {
          "description": "filter type. One of \"=\", \"<>\", \"!=\", \">\", \">=\", \"<\", \"<=\"",
          "type": "string"
        },
        "value": {
          "description": "value to filter for"
        }
      },
      "type": "object",
      "required": [
        "column",
        "type",
        "value"
      ]
    },
    "QueriesRequestElementColumn": {
      "properties": {
        "name": {
          "description": "column name",
          "type": "string"
        },
        "math": {
          "description": "basic math operation. Format (\\+|-|\\*|/)\\d+((\\.|,)\\d+)?",
          "type": "string"
        },
        "groupType": {
          "description": "group type. One of \"mean\", \"sum\", \"count\", \"median\", \"min\", \"max\", \"first\", \"last\", \"difference-first\", \"difference-last\", \"difference-min\", \"difference-max\", \"difference-count\", \"difference-mean\", \"difference-sum\", \"difference-median\"",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "QueriesRequestElementTime": {
      "properties": {
        "last": {
          "description": "time interval. Format \\d+(ns|u|µ|ms|s|m|h|d|w)",
          "type": "string"
        },
        "start": {
          "description": "start time. Format rfc3339",
          "type": "string"
        },
        "end": {
          "description": "end time. Format rfc3339",
          "type": "string"
        }
      },
      "type": "object",
      "description": "use either last or stand and end"
    },
    "QueriesRequestElement": {
      "properties": {
        "measurement": {
          "description": "id of requested measurement",
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/QueriesRequestElementTime"
        },
        "limit": {
          "description": "maximum number of values returned",
          "type": "integer"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueriesRequestElementTime"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueriesRequestElementTime"
          }
        },
        "groupTime": {
          "type": "string",
          "description": "Format \\d+(ns|u|µ|ms|s|m|h|d|w)"
        }
      },
      "required": [
        "measurement",
        "columns"
      ],
      "type": "object"
    }
  },
  "info": {
    "title": "influx-wrapper",
    "version": "0.1"
  },
  "paths": {
    "/doc": {
      "get": {
        "operationId": "get_docs",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "default"
        ]
      }
    },
    "/last-values": {
      "post": {
        "operationId": "post_last_values",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LastValueRequest"
            }
          },
          {
            "description": "An optional fields mask",
            "format": "mask",
            "in": "header",
            "name": "X-Fields",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LastValueResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/tags/{measurementId}": {
      "get": {
        "parameters": [
          {
            "name": "measurementId",
            "in": "path",
            "description": "ID of measurement you want to collect tags from",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "get_tags",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            }
          }
        },
        "tags": [
          "default"
        ]
      }
    },
    "/queries": {
      "post": {
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueriesRequestElement"
              }
            },
            "required": true
          },
          {
            "name": "format",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "2D or 3D array"
          }
        },
        "operationId": "post_queries",
        "tags": [
          "default"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "MaskError": {
      "description": "When any error occurs on mask"
    },
    "ParseError": {
      "description": "When a mask can't be parsed"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Default namespace",
      "name": "default"
    }
  ]
}
